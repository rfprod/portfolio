resources:
  - repo: self

trigger:
  branches:
    include:
      - master
  paths:
    exclude:
      - README.md

pr: none

jobs:
  ##
  # Main Building pipeline.
  # Along with building and deploying application dist, executes tests and generates coverage report.
  # All envitonment variables should be defined in vsts UI.
  ##
  - job: Building_pipeline
    timeoutInMinutes: 60
    cancelTimeoutInMinutes: 10

    pool:
      vmImage: 'ubuntu-16.04'

    steps:
      - task: NodeTool@0
        displayName: 'Use specific node version'
        inputs:
          versionSpec: '12.16.1'

      - script: |
          npm install -g npm@6.14.4
          bash shell/install.sh
          npm install -g typescript@3.4.5
          npm install -g @angular/cli@latest
          npm install -g firebase-tools@latest
          bash shell/set-env.sh $GITHUB_ACCESS_TOKEN $MAILER_HOST $MAILER_PORT $MAILER_EMAIL $MAILER_CLIENT_ID $MAILER_CLIENT_SECRET $MAILER_REFRESH_TOKEN $MAILER_ACCESS_TOKEN $MAILER_RECIPIENT_EMAIL
          npm run ng:test:single-run
          npm run ng:e2e:headless:single-run
          npm run ng:build:prod
          firebase deploy --token $FIREBASE_DEPLOY_TOKEN
          rm ./functions/.env
          rm -rf ./dist
        env:
          GITHUB_ACCESS_TOKEN: $(GITHUB_ACCESS_TOKEN)
          FIREBASE_DEPLOY_TOKEN: $(FIREBASE_DEPLOY_TOKEN)
          MAILER_HOST: $(MAILER_HOST)
          MAILER_PORT: $(MAILER_PORT)
          MAILER_EMAIL: $(MAILER_EMAIL)
          MAILER_CLIENT_ID: $(MAILER_CLIENT_ID)
          MAILER_CLIENT_SECRET: $(MAILER_CLIENT_SECRET)
          MAILER_REFRESH_TOKEN: $(MAILER_REFRESH_TOKEN)
          MAILER_ACCESS_TOKEN: $(MAILER_ACCESS_TOKEN)
          MAILER_RECIPIENT_EMAIL: $(MAILER_RECIPIENT_EMAIL)

      - task: ArchiveFiles@2
        displayName: 'Archive files'
        inputs:
          rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
          includeRootFolder: false

      - task: PublishBuildArtifacts@1
        displayName: 'Publish artifacts: drop'
